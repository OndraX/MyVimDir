" automatically open quickfix window when AsyncRun command is executed
" set the quickfix window 6 lines height.
let g:asyncrun_open = 6

" ring the bell to notify you job finished
let g:asyncrun_bell = 1

" turn on indentation indicators by default (for visual mixed indent detection)
setlocal list

" t_oggle q_uickfix window
nnoremap <leader>tq :call asyncrun#quickfix_toggle(6)<cr>
"k_ompi_l_e the kurrent file
:nnoremap <silent> <leader>kl :AsyncRun g++ -Wall -O2 "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/$(VIM_FILENOEXT)" <cr>
"k_ompile d_ebuggable code
:nnoremap <silent> <leader>kd :AsyncRun g++ -Wall -g "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/$(VIM_FILENOEXT)" <cr>
"" Insert mode maps
" include directive
:inoremap <space><space>in  <esc>ggi#include<space><><CR><esc>k$i
":inoremap <space><space>
:inoremap <space><space>usi unsigned long int 
:inoremap <space><space>uli unsigned short int 
:inoremap <space><space>si  short int   
:inoremap <space><space>li  long int 
:nnoremap <leader>in ggi#include<space><><esc>k$i

""Only conceal from now on
syntax match cNiceOperator "++" conceal cchar=Œî
syntax match cNiceOperator "--" conceal cchar=‚àá

syntax match cNiceOperator "==" conceal cchar=‚âù
syntax match cNiceOperator "!=" conceal cchar=‚â†
syntax match cNiceOperator ">=" conceal cchar=‚â•
syntax match cNiceOperator "<=" conceal cchar=‚â§

syntax match cNiceOperator "&&" conceal cchar=‚àß
syntax match cNiceOperator "||" conceal cchar=‚à®

syntax match cNiceOperator "<<" conceal cchar=‚â∫
syntax match cNiceOperator ">>" conceal cchar=‚âª

syntax match cNiceOperator "->" conceal cchar=‚ûû

syntax match cNiceOperator /\s=\s/ms=s+1,me=e-1 conceal cchar=‚Üê
syntax match cNiceOperator /\S=\S/ms=s+1,me=e-1 conceal cchar=‚Üê

syntax keyword cStructure enum conceal cchar=‚à©
syntax keyword cStructure union conceal cchar=‚ãÉ
syntax keyword cStructure struct conceal cchar=ùêí
syntax keyword cOperator sizeof conceal cchar=ùî†

syntax keyword cStatement return conceal cchar=‚èé
syntax keyword cStatement goto conceal cchar=‚Ü∑

syntax keyword cRepeat while conceal cchar=‚•Å
syntax keyword cRepeat for conceal cchar=‚àÄ

syntax keyword cType void         conceal cchar=‚àÖ
syntax keyword cType unsigned     conceal cchar=‚Ñï
syntax keyword cType int		  conceal cchar=‚Ñ§
syntax keyword cType char         conceal cchar=‚àÅ
syntax keyword cType float double conceal cchar=‚Ñù
syntax keyword cType string conceal cchar=ùêí

syntax keyword cType function conceal cchar=Œª

syntax keyword cKeyword false conceal cchar=ùêÖ
syntax keyword cKeyword FALSE conceal cchar=ùêÖ
syntax keyword cKeyword true conceal cchar=ùêì
syntax keyword cKeyword TRUE conceal cchar=ùêì
syntax keyword cKeyword NULL conceal cchar=‚àÖ
syntax keyword cKeyword complex conceal cchar=‚ÑÇ
syntax keyword cKeyword bool conceal cchar=ùîπ

""Own quirks section (idiosyncratic)
" indicate long/short using IPA notation
syntax keyword Conceal long conceal=Àê
" a bit of a stretch but will do until I've figured out how to combine
" diacritics
syntax match Conceal /\<short\sint\>/ conceal ‚Ñ§
syntax match Conceal /\<unsigned\sshort\sint\>/ conceal ‚Ñ§
syntax match Conceal /\<unsigned\slong\sint\>/ conceal ‚Ñ§

hi link cNiceOperator Operator
hi! link Conceal Operator
